package oops;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Rashmit Mhatre
 */
import javax.swing.*;
import java.sql.*;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
        this.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("HP Simplified", 1, 50)); // NOI18N
        jLabel1.setText("WELCOME TO THE HOME PAGE");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 0, 680, 60));

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/sketchbook1.png"))); // NOI18N
        jButton1.setText("CREATE CAMAPIGN");
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 101, 170, 150));

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/donation1.png"))); // NOI18N
        jButton2.setText("VIEW DONATIONS");
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 580, -1, 140));

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/file1.png"))); // NOI18N
        jButton3.setText("DONATION HISTORY");
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 570, 180, 140));

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/view1.png"))); // NOI18N
        jButton4.setText("VIEW CAMPAIGNS");
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 180, -1));

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close_1.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 0, 40, 40));

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/switch.png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Home.jpg"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 990, 760));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new CreateCampaign().setVisible(true);
        dispose();
    }// GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        new Image().setVisible(true);
        dispose();
    }// GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("UserID");
        model.addColumn("Name");
        model.addColumn("ProjectID");
        model.addColumn("ProjectName");
        model.addColumn("DonationID");
        model.addColumn("Donations");
        model.addColumn("DonationDate");

        // Create the JTable and add it to a scroll pane
        JTable table = new JTable(model);
        JScrollPane scrollPane = new JScrollPane(table);

        // Create the table frame
        JFrame tableFrame = new JFrame("Donation Summary");
        tableFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        tableFrame.getContentPane().add(scrollPane);

        // Variables to store the total donation sum and count
        double totalDonationsSum = 0;
        int totalDonationsCount = 0;

        // Fetch and display data
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/student", "root", "root");
            String procedureCall = "{ CALL GetUserDonationSummary(?) }";
            CallableStatement stmt = connection.prepareCall(procedureCall);
            stmt.setString(1, Login.loggedInUser); // Replace with the desired username

            ResultSet resultSet = stmt.executeQuery();

            Vector<Vector<Object>> data = new Vector<>();

            while (resultSet.next()) {
                int userId = resultSet.getInt("UserID");
                String name = resultSet.getString("Name");
                int projectId = resultSet.getInt("ProjectID");
                String projectName = resultSet.getString("ProjectName");
                String[] donationIds = resultSet.getString("DonationIDs").split(",");
                String[] individualDonations = resultSet.getString("IndividualDonations").split(",");
                String[] donationDates = resultSet.getString("DonationDates").split(",");

                for (int i = 0; i < donationIds.length; i++) {
                    Vector<Object> row = new Vector<>();
                    row.add(userId);
                    row.add(name);
                    row.add(projectId);
                    row.add(projectName);
                    row.add(donationIds[i]);
                    double donationAmount = Double.parseDouble(individualDonations[i]);
                    row.add(donationAmount);
                    row.add(donationDates[i]);
                    data.add(row);

                    totalDonationsSum += donationAmount;
                    totalDonationsCount++;
                }
            }

            resultSet.close();
            stmt.close();
            connection.close();

            // Sort the data based on the date
            data.sort((row1, row2) -> {
                String date1 = (String) row1.get(6); // Assuming the date is in column 6
                String date2 = (String) row2.get(6);
                return date1.compareTo(date2);
            });

            for (Vector<Object> row : data) {
                model.addRow(row);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        // Display the total donations and the total donation amount below the main
        // table
        Vector<Object> totalDonationsRow = new Vector<>();
        totalDonationsRow.add(""); // You can leave this column empty
        totalDonationsRow.add(""); // You can leave this column empty
        totalDonationsRow.add("Total Donations: " + totalDonationsCount);
        totalDonationsRow.add(""); // You can leave this column empty
        totalDonationsRow.add(""); // You can leave this column empty
        totalDonationsRow.add("Total Donation Amount: " + totalDonationsSum);

        model.addRow(totalDonationsRow);

        // Vector<Object> totalDonationsAmountRow = new Vector<>();
        // totalDonationsAmountRow.add(""); // You can leave this column empty
        // totalDonationsAmountRow.add(""); // You can leave this column empty
        // totalDonationsAmountRow.add(""); // You can leave this column empty
        // totalDonationsAmountRow.add("Total Donation Amount: " + totalDonationsSum);
        // model.addRow(totalDonationsAmountRow);

        // Display the table in a separate frame
        tableFrame.pack();
        tableFrame.setLocationRelativeTo(null); // Set the main frame as the relative frame
        tableFrame.setVisible(true);

    }// GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Donation ID");
        model.addColumn("Donor");
        model.addColumn("Project Name");
        model.addColumn("Donation Time");
        model.addColumn("Amount");

        int totalDonationsCount = 0;
        double totalDonationAmount = 0.0;

        JTable table = new JTable(model);
        JScrollPane scrollPane = new JScrollPane(table);

        JFrame frame = new JFrame("Donation Summary");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.getContentPane().add(scrollPane);

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/student", "root", "root");
            CallableStatement stmt = connection.prepareCall("{ CALL showDonations() }");

            ResultSet resultSet = stmt.executeQuery();

            while (resultSet.next()) {
                int donationId = resultSet.getInt("donation_id");
                String donorUsername = resultSet.getString("donor_username");
                String donorName = resultSet.getString("donor_name");
                String projectName = resultSet.getString("project_name");
                Timestamp donationTime = resultSet.getTimestamp("donation_time");
                double amount = resultSet.getDouble("amount");

                String donor = donorUsername + " (" + donorName + ")";
                model.addRow(new Object[] { donationId, donor, projectName, donationTime, amount });

                totalDonationsCount++;
                totalDonationAmount += amount;
            }

            resultSet.close();
            stmt.close();
            connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

        model.addRow(new Object[] { "Total Donations: " + totalDonationsCount, "", "", "Total Donation Amount:",
                totalDonationAmount });

        frame.pack();
        frame.setLocationRelativeTo(this); // Set the main frame as the relative frame
        frame.setVisible(true);
    }// GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int a = JOptionPane.showConfirmDialog(null, "Do you really want to Exit ?? ", "Select",
                JOptionPane.YES_NO_OPTION);
        if (a == 0) {
            System.exit(0);
        }
    }// GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int a = JOptionPane.showConfirmDialog(null, "Do you want to Logout ?? ", "Select", JOptionPane.YES_NO_OPTION);
        if (a == 0) {
            new Login().setVisible(true);
            this.dispose();
        }
    }// GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
